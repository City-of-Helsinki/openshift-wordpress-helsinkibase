#!/bin/bash
echo -e "\n===== BEFORE S2I ASSEMBLE =====\n"

echo "# Backup composer.json"
cp /tmp/src/composer.json /tmp/composer.json.bak

echo "# whoami pre assemble"
whoami

echo -e "\n===== S2I ASSEMBLE =====\n"
/usr/libexec/s2i/assemble
S2I_ASSEMBLE_SUCCESS=$?

if [ ${S2I_ASSEMBLE_SUCCESS} -eq 0 ]; then
    echo -e "\n===== S2I ASSEMBLE SUCCESSFUL =====\n"

    echo "# Restore composer.json"
    mv /tmp/composer.json.bak /opt/app-root/src/composer.json

    echo "# Setup composer bin"
    mv /opt/app-root/src/composer.phar /usr/bin/composer
    chmod +x /usr/bin/composer

    if [[ ${COMPOSER_REPOSITORIES} ]]; then
        echo "# Setup additional Composer repositories"

        readarray -td "|" REPOSITORIES_LIST <<< "${COMPOSER_REPOSITORIES}"; declare -a REPOSITORIES_LIST;

        for REPO_NAME_TYPE_URL in "${REPOSITORIES_LIST[@]}"
        do
            composer config repositories.$(echo "${REPO_NAME_TYPE_URL}" | xargs) 1> /dev/null 2> /dev/null
            REPOSITORY_ADDED=$?

            if [ ${REPOSITORY_ADDED} -ne 0 ]; then
                echo "# Failed to add repository to Composer config:"
                echo "${REPO_NAME_TYPE_URL}"

                exit ${REPOSITORY_ADDED}
            fi
        done
    else
        echo "# No additional Composer repositories to add"
    fi

    if [[ ${COMPOSER_PACKAGES} ]]; then
        echo "# Install additional Composer packages"

        composer require ${COMPOSER_PACKAGES}
        PACKAGES_INSTALLED=$?

        if [ ${PACKAGES_INSTALLED} -ne 0 ]; then
            echo "# Failed to require Composer packages:"
            echo ${COMPOSER_PACKAGES} | tr ' ' '\n'

            exit ${PACKAGES_INSTALLED}
        fi
    else
        echo "# No additional Composer packages to install"
    fi

    echo "# Setup directory and file ownerships"

    echo "# whoami"
    whoami

    echo -e "\t- Change group ownership for all files & directories"
    chgrp -R wordpress /opt/app-root/src

    echo -e "\t- Secure all directories (only owner can write)"
    find /opt/app-root/src -type d -exec chmod 755 {} \;

    echo -e "\t- Secure all files (remove group write and lock out others)"
    find /opt/app-root/src -type f -exec chmod g-w,o-rwx {} \;

    echo -e "\t- Preserve execution permissions for required scripts"
    chmod +x /opt/app-root/src/.s2i/bin/run-wrapped
    chmod +x /opt/app-root/src/utils/generate_redirects.sh

    echo -e "\t- Allow writing to /httpd-cfg and /httpd-cfg/redirects.conf"
    chgrp -R wordpress /httpd-cfg
    chmod -R g+rw /httpd-cfg
    chmod g+rw /httpd-cfg/redirects.conf

    echo -e "\t- Allow writing to .msmtprc"
    chgrp wordpress /opt/app-root/src/.msmtprc
    chmod g+rw /opt/app-root/src/.msmtprc

    echo -e "\t- Allow writing to /wp-content/uploads"
    chgrp -R wordpress /opt/app-root/src/wp-content/uploads
    chmod -R g+rw /opt/app-root/src/wp-content/uploads

else
    echo -e "\n===== S2I ASSEMBLE FAILED =====\n"
fi

echo -e "\n===== S2I ASSEMBLE READY =====\n"

echo "# whoami post assemble"
whoami

exit ${S2I_ASSEMBLE_SUCCESS}
