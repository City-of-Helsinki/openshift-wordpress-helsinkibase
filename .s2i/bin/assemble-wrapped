#!/bin/bash
echo -e "\n===== BEFORE S2I ASSEMBLE =====\n"

echo "# Setup default php config"
mv /tmp/src/config/wp-helfi.ini /etc/php.d/wp-helfi.ini

echo "# Backup composer.json"
cp /tmp/src/composer.json /tmp/composer.json.bak

echo -e "\n===== S2I ASSEMBLE =====\n"
/usr/libexec/s2i/assemble
S2I_ASSEMBLE_SUCCESS=$?

if [ ${S2I_ASSEMBLE_SUCCESS} -eq 0 ]; then
    echo -e "\n===== S2I ASSEMBLE SUCCESSFUL =====\n"

    echo "# Restore composer.json"
    mv /tmp/composer.json.bak /opt/app-root/src/composer.json

    echo "# Setup composer bin"
    mv /opt/app-root/src/composer.phar /usr/bin/composer
    chmod +x /usr/bin/composer
    chmod +w /opt/app-root/src/composer.json

    if [[ ${COMPOSER_REPOSITORIES} ]]; then
        echo "# Setup additional Composer repositories"

        readarray -td "|" REPOSITORIES_LIST <<< "${COMPOSER_REPOSITORIES}"; declare -a REPOSITORIES_LIST;

        for REPO_NAME_TYPE_URL in "${REPOSITORIES_LIST[@]}"
        do
            echo "adding repository with following details: ${REPO_NAME_TYPE_URL}"
            composer config repositories.$(echo "${REPO_NAME_TYPE_URL}" | xargs)
            REPOSITORY_ADDED=$?

            if [ ${REPOSITORY_ADDED} -ne 0 ]; then
                echo "# Failed to add repository to Composer config:"
                echo "${REPO_NAME_TYPE_URL}"

                exit ${REPOSITORY_ADDED}
            fi
        done
    else
        echo "# No additional Composer repositories to add"
    fi

    if [[ ${COMPOSER_PACKAGES} ]]; then
        echo "# Install additional Composer packages"

        composer require ${COMPOSER_PACKAGES}
        PACKAGES_INSTALLED=$?

        if [ ${PACKAGES_INSTALLED} -ne 0 ]; then
            echo "# Failed to require Composer packages:"
            echo ${COMPOSER_PACKAGES} | tr ' ' '\n'

            exit ${PACKAGES_INSTALLED}
        fi
    else
        echo "# No additional Composer packages to install"
    fi

    echo "# Delete default WP plugins"
    rm -rf /opt/app-root/src/wp-content/plugins/akismet /opt/app-root/src/wp-content/plugins/hello.php

    echo "# Delete default WP themes"
    find /opt/app-root/src/wp-content/themes -type d -name 'twenty*' -exec rm -rf {} \;

    echo "# Set group ownership to root"
    chgrp -R root /opt/app-root/src

    echo "# Remove group write from EVERYTHING"
    find /opt/app-root/src -type f -exec chmod g-w,o-rwx {} +
    find /opt/app-root/src -type d -exec chmod g-w,o-rwx {} +

    echo "# Selectively add group write"
    chmod g+rw /opt/app-root/src/httpd-cfg/redirects.conf
    chmod g+rw /opt/app-root/src/.msmtprc
    chmod -R g+rw /opt/app-root/src/httpd-cfg

    echo "# Ensure group execute on all directories"
    find /opt/app-root/src -type d -exec chmod g+X {} +

    echo "# Mark custom scripts executable"
    chmod +x /opt/app-root/src/.s2i/bin/run-wrapped
    chmod +x /opt/app-root/src/utils/generate_redirects.sh

else
    echo -e "\n===== S2I ASSEMBLE FAILED =====\n"
fi

echo -e "\n===== S2I ASSEMBLE READY =====\n"

# cleanup
rm -rf /mnt/secrets/*
rm -f /opt/app-root/src/.config/composer/auth.*

exit ${S2I_ASSEMBLE_SUCCESS}
